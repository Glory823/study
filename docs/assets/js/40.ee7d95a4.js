(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{211:function(e,a,n){"use strict";n.r(a);var l=n(0),t=Object(l.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,a=e.$createElement,n=e._self._c||a;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据类型","aria-hidden":"true"}},[e._v("#")]),e._v(" 数据类型")]),e._v(" "),n("p",[e._v("1、ECMAScript 数据类型：5 种基本数据类型(简单数据类型或原始类型) 和 1 种复杂数据类型")]),e._v(" "),n("p",[e._v("5 种基本数据类型：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("    undefined 未定义 10:22 2018/8/30 类型\n    null 空类型\n    boolean 布尔类型\n    number 数值型\n    string 字符串类型\n")])])]),n("p",[e._v("1 种复杂数据类型：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("    object —— 对象类型\n")])])]),n("ul",[n("li",[n("p",[e._v("栈内存和堆内存")]),e._v(" "),n("p",[n("strong",[e._v("栈内存")]),e._v(":5 种基本数据类型的值保存在栈内存中")]),e._v(" "),n("p",[n("strong",[e._v("堆内存")]),e._v(":对象类型的值保存在堆内存中")])]),e._v(" "),n("li",[n("p",[e._v("Undefined -- 未定义类型 （就保存一个值）")]),e._v(" "),n("p",[e._v("Undefined 类型只有一个值，即特殊的 undefined。")])])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('  1)使用 var 声明变量但未赋值(未初始化)时，这个变量的值就是 undefined。检测其类型也是 undefined。\n    var a;\n    console.log(a);//a=undefined\n    console.log(typeof a);//"undefined"\n\n  注意：一般不需要显示的将变量设置为 undefined。\n    var a = undefined;\n    var a;//undefined\n\n  2)变量从未定义过 ，他的类型为 undefined ，值报错。\n    console.log(e); //报错 e is not defined\n    console.log(typeof e);//"undefined"（相当于隐式声明了个 e 但没有报错）\n')])])]),n("ul",[n("li",[e._v("Null -- 空类型 （就保存一个值）")])]),e._v(" "),n("p",[e._v("Null 类型是第二个只有一个值的类型，这个特殊值是 null。null 值表示一个空对象指针。\nNull 是特殊的对象类型：object")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('    var  car = null;\n    console.log(car);//null\n    console.log(typeof car);//"object"\n')])])]),n("p",[e._v("注意:实际上 undefined 值是派生自 null 值的，因此 ECMA-262 规定对它们的相等性测试要返回 true。")]),e._v(" "),n("p",[e._v("alert(undefined == null); //true 真")]),e._v(" "),n("ul",[n("li",[e._v("Boolean -- 布尔类型")])]),e._v(" "),n("p",[e._v("Boolean 类型是 ECMAScript 中使用得最多的一种类型,用于表示真假的数据类型。")]),e._v(" "),n("p",[e._v("转 boolean 值为 false 的 6 个")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('null false NAN undelined "" 0 除了这 6 个其他转 boolean 为真\n')])])]),n("p",[e._v("Boolean 类型只有两个值：true(真) \\ false(假)。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('    var flag = true;//false\n    console.log(flag);//true\n    console.log( typeof(flag) );//"boolean"\n')])])]),n("ul",[n("li",[n("p",[e._v("Number -- 数值类型 分为整数和浮点数")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("整数 100、22、11、3")])]),e._v(" "),n("li",[n("p",[e._v("浮点数值(有些语言中被称为双精度数值) 4.522 3.1415926")]),e._v(" "),n("pre",[n("code",[e._v("  浮点数值的最高精度是17位小数。特殊：0.1+0.2=0.30000000000000004\n")])])])]),e._v(" "),n("p",[e._v("数值类型中一种特殊的数值: NaN: not a Number 不是一个数字==非数值 特殊的数值类型（检测 NaN 的数据类型返回 number）")]),e._v(" "),n("pre",[n("code",[e._v('  ==表示判断     =表示赋值        ===表示全等\n\n  表示一个本来要返回数值的操作数未返回数值的情况。\n\n  console.log( 5 - "hello" );//NaN\n')])]),e._v(" "),n("p",[e._v("NaN 特点： 1)任何涉及 NaN 的操作都会返回 NaN。 NaN + 4 // NaN 2)")]),e._v(" "),n("p",[n("strong",[e._v("NaN 与任何值都不相等，包括 NaN 本身")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("alert( NaN == NaN ) //false 自我否定\n")])])])])]),e._v(" "),n("p",[e._v("isNaN(参数 n)")]),e._v(" "),n("p",[e._v('判断参数 n 是否是"非数值"。如果是数值返回 false,不是数值返回 true;')]),e._v(" "),n("p",[e._v("说明：isNaN()在接收到一个值之后，会尝试将这个值转换为数值。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('\n    alert(isNaN(NaN)); //true\n    alert(isNaN(10)); //false(10是一个数值)\n    alert(isNaN("10")); //false(可以被转换成数值10)\n    alert(isNaN("hello")); //true(不能转换成数值)\n    alert(isNaN(true)); //false(可以被转换成数值1)\n\n')])])]),n("ul",[n("li",[n("p",[e._v("String -- 字符串类型 （存放在堆内存当中）")]),e._v(" "),n("p",[e._v("字符串可以由双引号或者单引号表示。")])])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("  var str = \"hello world\";\n  var str = 'hello world';\n")])])]),n("p",[e._v("数据类型包含一些特殊的字符字面量，也叫转义序列(字符)，用于表示非打印字符")]),e._v(" "),n("pre",[n("code",[e._v("    \\n  换行\n    \\t  制表\n    \\b  空格\n    \\r  回车\n    \\f  换页\n")])]),e._v(" "),n("p",[e._v("查看字符串的长度：length 属性")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('\nvar str = "hello world";\nconsole.log(str.length);//11\n\n')])])]),n("p",[e._v("查看字符串相应位置的字符。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('\nvar str = "hello world";\nconsole.log(str[1]);//e\n\n')])])]),n("ul",[n("li",[e._v("Object -- 类型 ：ECMAScript 中的对象其实就是一组数据和功能的集合")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("\nvar o = {}; \\\\对象字面量方法创建\n\nvar o = new Object(); \\\\构造函数方法创建\n\n")])])]),n("p",[e._v("2、typeof 操作符")]),e._v(" "),n("p",[e._v("作用:检测变量的数据类型 返回结果都是 string 类型")]),e._v(" "),n("p",[e._v("typeof 两种使用法:")]),e._v(" "),n("pre",[n("code",[e._v("typeof 变量名\n\ntypeof(变量名)\n")])]),e._v(" "),n("p",[e._v("可能返回以下字符串: 少了个 null 多了个 function（函数）")]),e._v(" "),n("pre",[n("code",[e._v('"undefined" ==>  如果这个值未定义\n"boolean"   ==>  如果这个值是布尔值\n"number"    ==>  如果这个值是数值\n"string"    ==>  如果这个值是字符串\n"object"    ==>  如果这个值是对象或null\n"function"  ==>  如果这个值是函数\n')])]),e._v(" "),n("p",[e._v("数据类型有哪些?")]),e._v(" "),n("p",[e._v("5 种基本数据类型")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("undefined null boolean number string\n")])])]),n("p",[e._v("1 种复杂数据类型  object")]),e._v(" "),n("p",[e._v("typeof 操作符会返回哪些值?")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('"undefined" "number" "boolean" "string" "object" "function"\n')])])])])}],!1,null,null,null);a.default=t.exports}}]);