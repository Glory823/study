(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{226:function(t,e,a){"use strict";a.r(e);var s=a(0),n=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"组件通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件通信","aria-hidden":"true"}},[t._v("#")]),t._v(" 组件通信")]),t._v(" "),a("h4",{attrs:{id:"_1-父子传递"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-父子传递","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 父子传递")]),t._v(" "),a("h5",{attrs:{id:"父组件向子组件传值-父向子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#父组件向子组件传值-父向子","aria-hidden":"true"}},[t._v("#")]),t._v(" 父组件向子组件传值(父向子)")]),t._v(" "),a("p",[t._v("父组件 --\x3e  通过动态属性传递")]),t._v(" "),a("pre",[a("code",[t._v('<template>\n    <div>\n       <lis :lists="lists" :obj="obj" :styles="style"></lis>\n    </div>\n</template>\n')])]),t._v(" "),a("p",[t._v("子组件  --\x3e  通过props属性接受")]),t._v(" "),a("p",[t._v("1.数组形式")]),t._v(" "),a("pre",[a("code",[t._v('props:["lists","obj","styles"]\n')])]),t._v(" "),a("p",[t._v("2.对象形式")]),t._v(" "),a("pre",[a("code",[t._v("//属性名类型 Object|Array|String|Number|Boolean|Function\n\nprops:{\n    title:String,\n    count:Number,\n    imgs:Array,\n    styles:Object\n}\n")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   props:{\n       属性名:{\n           type:类型,\n           requires:  ,//将值设为必填项(默认值为false)\n           default:  ,//设置默认值,(如果是简单值,直接设置,如果是数组或者对象的话,需要包一个函数)\n           validationtor(val){\n               //自定义格式的验证,函数return成立\n           }\n       }\n   }\n")])])]),a("h5",{attrs:{id:"子组件向父组件传值-子向父"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子组件向父组件传值-子向父","aria-hidden":"true"}},[t._v("#")]),t._v(" 子组件向父组件传值(子向父)")]),t._v(" "),a("p",[t._v("子组件  --\x3e  通过$emit")]),t._v(" "),a("pre",[a("code",[t._v("$emit('事件名称','实参1','实参2')触发\n")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    <button @click=\"$emit('addCount',count)\"></button>\n")])])]),a("p",[t._v("父组件  --\x3e 使用元素上使用")]),t._v(" "),a("pre",[a("code",[t._v("@事件名称 = '事件处理程序'\n")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    <lis :title='title' :count='count' :style='styles' @addCount='add'></lis>\n")])])]),a("h4",{attrs:{id:"_2-非父子传递"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-非父子传递","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 非父子传递")]),t._v(" "),a("p",[t._v("通过创建一个空对象")]),t._v(" "),a("p",[t._v("在main.js里面")]),t._v(" "),a("pre",[a("code",[t._v("Vue.prototype.$bus = new Vue()\n")])]),t._v(" "),a("p",[t._v("所有的组件都是通过VueComponent实例出来的,VueComponent继承Vue")]),t._v(" "),a("p",[t._v("子组件")]),t._v(" "),a("pre",[a("code",[t._v("$bus.$emit('事件名',参数1,参数2)\n")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('eg:methods:{\n    addClick(){\n        var num = this.count+1;\n        this.$bus.$emit("addCount",num,this.conId);\n    }\n},\n')])])]),a("p",[t._v("非父组件")]),t._v(" "),a("pre",[a("code",[t._v("$bus.$on('事件名',函数)  \n")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('eg:created(){\n  this.$bus.$on("addCount",(count,id)=>{\n    var index = this.list.findIndex(item=>item.id==id);\n    this.list[index].count=count;\n  })\n}\n')])])]),a("h4",{attrs:{id:"vue-cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-cli","aria-hidden":"true"}},[t._v("#")]),t._v(" vue-cli")]),t._v(" "),a("p",[t._v("全局安装vue-cli")]),t._v(" "),a("p",[t._v("vue init webpack 文件夹名  --\x3e 完整版")]),t._v(" "),a("p",[t._v("vue init webpack -simple 文件夹名 --\x3e  简单版")]),t._v(" "),a("p",[a("em",[a("strong",[t._v("发起ajax请求在生命周期created中")])])])])}],!1,null,null,null);e.default=n.exports}}]);