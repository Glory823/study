(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{233:function(t,a,e){"use strict";e.r(a);var s=e(0),l=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"slot"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#slot","aria-hidden":"true"}},[t._v("#")]),t._v(" slot")]),t._v(" "),e("h4",{attrs:{id:"_1-单个插槽"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-单个插槽","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 单个插槽")]),t._v(" "),e("ul",[e("li",[t._v("子组件模板==包含至少一个 slot ==插口,否则父组件的内容将会==被丢弃==。")])]),t._v(" "),e("p",[t._v("最初在 slot 标签中的任何内容都被视为备用内容,备用内容在子组件的作用域内编译,并且只有在宿主元素为空,且没有要插入的内容")]),t._v(" "),e("p",[e("strong",[t._v("子组件")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    <header>\n        <span></span>\n        <slot>713</slot>\n        <span></span>\n    </header>\n")])])]),e("p",[e("strong",[t._v("父组件")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("//如果此时子组件里面没有slot这个插口的话,父组件里面的b标签将会被丢弃\n<my-header>\n    <b>标题</b>\n</my-header>\n")])])]),e("ul",[e("li",[t._v("档子组件模板只有一个没有属性的插槽时,父组件传入的整个内容片段将插入到插槽所在的 DOM 位置,并替换掉")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("//整个ul都会替换插槽标签本身\n<my-header>\n    <ul>\n        <li></li>\n    </ul>\n</my-header>\n")])])]),e("h4",{attrs:{id:"_2-具名插槽"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-具名插槽","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 具名插槽")]),t._v(" "),e("p",[t._v("slot 元素可以用一个特殊的特性 name 来进一步配置如何分发内容,多个插槽可以有不同的名字,具名插槽将匹配内容片段中有对应 slot 特性的元素")]),t._v(" "),e("p",[e("strong",[t._v("子组件")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<slot name="插槽名"></slot>\n')])])]),e("p",[t._v("父组件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("<template>\n    \x3c!--同一个组件出现多个slot需要使用template--\x3e\n    <button></button>//html结构\n</template>\n")])])]),e("h4",{attrs:{id:"_3-作用域插槽"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-作用域插槽","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 作用域插槽")]),t._v(" "),e("p",[t._v("作用域插槽就是父组件在调用子组件的时候给子组件传了一个插槽,这个插槽为作用域插槽。")]),t._v(" "),e("p",[t._v("该插槽必须放在 template 标签里面,同时声明从子组件接收的数据放在一个自定义属性内,并定义该数据的渲染方式。")]),t._v(" "),e("p",[e("strong",[t._v("子组件")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<slot :list="list" name="default" :names="11"></slot>\n')])])]),e("p",[e("strong",[t._v("父组件")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('//obj里面存放的是从插槽获取发哦的所有属性\n\n<template>\n    <ul>\n        <li v-for="(item,index) in obj.list" :key="index">{{item.title}}</li>\n    </ul>\n</template>\n')])])])])}],!1,null,null,null);a.default=l.exports}}]);